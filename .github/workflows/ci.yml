name: CI
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:

  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-java@v3
      with:
        distribution: 'zulu'
        java-version: '17'
        cache: gradle

    - name: Test
      run: |
        chmod +x gradlew
        ./gradlew test
    - name: Build dist
      run: ./gradlew assemble
    - uses: actions/upload-artifact@v3
      with:
        name: dist
        path: build/libs
        if-no-files-found: error

  deploy:
    needs: [build]
    if: github.event_name != 'pull_request'
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - uses: actions/download-artifact@v3
      with:
        name: dist
        path: ${{ github.workspace }}/dist/
    - name: Display structure of downloaded artifact
      run: ls -lh dist

    - name: Cache Docker layers
      uses: actions/cache@v2
      with:
        path: /tmp/.buildx-cache
        key: ${{ runner.os }}-buildx-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-buildx-

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Build Docker
      uses: docker/build-push-action@v3
      with:
        context: ./
        load: true
        tags: cuzfrog/test-task:${{ github.sha }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

    - name: Set image tag as env
      run: |
        VERSION=$(cat gradle.properties | grep version | sed "s/version=//g")
        echo "IMAGE=cuzfrog/test-task:$VERSION" >> $GITHUB_ENV

    - name: Login to DockerHub
      uses: docker/login-action@v2
      with:
        username: cuzfrog
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Push Docker
      uses: docker/build-push-action@v3
      with:
        context: ./
        push: true
        tags: cuzfrog/test-task:latest,${{ env.IMAGE }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

    - name: Deploy to k8s
      uses: cuzfrog/install-kubectl@v1
      with:
        config: ${{ secrets.KUBE_CONFIG_DATA }}
        version: v1.21.6
        run: |
          export IMAGE=${{ env.IMAGE }}
          envsubst < deploy/k8s-deployment.yml | kubectl apply -f -
          kubectl wait deployment test-task --for condition=Available=True --timeout=60s
          kubectl apply -f deploy/k8s-service.yml

    - name: Verify Deployment
      uses: cuzfrog/install-kubectl@v1
      with:
        config: ${{ secrets.KUBE_CONFIG_DATA }}
        version: v1.21.6
        run: |
          echo "Checking deployment..."
          status=$(kubectl get deployment/test-task -o jsonpath='{.status.conditions[?(@.type=="Available")].status}')
          if [ "$status" != "True" ]; then
            echo "Deployment not availble!"
            exit 1
          fi
          version=$(kubectl get deployment/test-task -o jsonpath='{.spec.template.spec.containers[0].image}')
          if [ "$version" != "${{ env.IMAGE }}" ]; then
            echo "Deployment[$version] not updated to ${{ env.IMAGE }}!"
            exit 1
          fi
          echo "Deployment updated and available."
